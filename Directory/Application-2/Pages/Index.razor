
@using ChartJs.Blazor.ChartJS.Common
@using MudBlazor
@using System.Collections.Generic
@using MudBlazor.Components
@using MudBlazor.Charts
@inject IJSRuntime JSRuntime



@page "/"

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("showGreetingMessage");
        }
    }
}


<h1>Welcome to Blazor!</h1>

<p>Blazor is a modern web framework that allows you to build interactive web applications using C# and .NET.</p>
<p>Single language development: Write both client-side and server-side code in C#.</p>
<p>Security: Blazor applications can benefit from the security features of ASP.NET Core.</p>
<p>Cross-platform development: Blazor applications can be deployed to a variety of platforms, including web browsers, desktops, and mobile devices.</p>

@if (!isLoggedIn)
{
    <div>
        <h2>Login</h2>
        <p>Please log in to access more features.</p>
        <form>
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" @bind="username" />
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" @bind="password" />
            </div>
            <button type="button" @onclick="Login">Log In</button>
        </form>
    </div>
}
else
{
    
    <p>You are logged in as: @username</p>
    
}

@code {
    private string username;
    private string password;
    private bool isLoggedIn = false;

    private async Task Login()
    {
        
        if (!string.IsNullOrEmpty(username) && !string.IsNullOrEmpty(password))
        {
            isLoggedIn = true;
        }
    }
}

<h4>Here is the demo chart!</h4>
<p>that showing population density of three country</p>
<div>
    <MudChart ChartType="ChartType.Bar" ChartSeries="@Series" @bind-SelectedIndex="IndexChart" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudChart>
</div>

@code {
    private int IndexChart = -1; 

    public List<ChartSeries> Series = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "", Data = new double[] { 40, 20, 25, 27, 46, 60, 48, 80, 15 } },
        new ChartSeries() { Name = "", Data = new double[] { 19, 24, 35, 13, 28, 15, 13, 16, 31 } },
        new ChartSeries() { Name = "", Data = new double[] { 8, 6, 11, 13, 4, 16, 10, 16, 18 } },
    };
    public string[] XAxisLabels = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep" };
}

